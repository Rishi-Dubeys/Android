package com.example.noidea;import static android.content.ContentValues.TAG;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.example.noidea.model.Games;import com.example.noidea.model.Review;import com.example.noidea.model.newGames;import com.example.noidea.viewModel.newGamesView;import com.example.noidea.viewModel.reviewsView;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.Query;import com.google.firebase.database.ValueEventListener;import java.io.Console;import java.util.ArrayList;import java.util.List;public class gameDetailsActivity extends AppCompatActivity {    TextView detailsName , detailsPublisher , detailsPlatform , detailsDate , detailsDesc;    ImageView imageView;    Button reviewPage;    Intent intentReview;    List<Review> reviewList = new ArrayList<>();    RecyclerView recyclerView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_game_details);        detailsName = findViewById(R.id.detailsNames);        detailsDate = findViewById(R.id.dateDetails);        detailsPlatform = findViewById(R.id.platformDetails);        detailsPublisher = findViewById(R.id.publisherDetails);        detailsDesc = findViewById(R.id.descDetails);        imageView = findViewById(R.id.gameImage);        reviewPage = findViewById(R.id.reviewPage);        recyclerView = findViewById(R.id.reviewRecycler);        recyclerView.setLayoutManager(new LinearLayoutManager(this));        reviewList.clear();        retrieveData();        FirebaseAuth mAuth = FirebaseAuth.getInstance();        FirebaseUser currentUser = mAuth.getCurrentUser();        if(currentUser != null){            intentReview = new Intent(this, ReviewsActivity.class);            reviewPage.setOnClickListener(view -> startActivity(intentReview));        } else {            reviewPage.setOnClickListener(view -> loginDialog());        }    }    public void loginDialog(){        intentReview = new Intent(this, LoginActivity.class);        startActivity(intentReview);        Toast.makeText(this, "Please login before review", Toast.LENGTH_SHORT).show();    }    private void retrieveDataRecycler() {        Intent intent = getIntent();        String id = intent.getStringExtra("id");        DatabaseReference dbRef = FirebaseDatabase.getInstance().getReference("Reviews-Game").child(id);        ValueEventListener postListener = new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot snapshot) {                for (DataSnapshot dataSnapshot : snapshot.getChildren()){                    Review review = dataSnapshot.getValue(Review.class);                    reviewList.add(review);                }                // Assigning the View Adapter/Model to retrieve the list populated above                reviewsView adapter = new reviewsView(getApplicationContext(), reviewList);                // setting the adapter to the recycler view                recyclerView.setAdapter(adapter);                adapter.notifyDataSetChanged();            }            @Override            public void onCancelled(DatabaseError databaseError) {                // Getting Post failed, log a message                Log.w(TAG, "loadPost:onCancelled", databaseError.toException());            }        };        dbRef.addValueEventListener(postListener);    }    private void retrieveData() {        Intent intent = getIntent();        String id = intent.getStringExtra("id");        DatabaseReference dbRef = FirebaseDatabase.getInstance().getReference("Games").child(id);        ValueEventListener postListener = new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot snapshot) {                    // Use model to retrieve the data from Firebase Database                    Games games = snapshot.getValue(Games.class);                assert games != null;                String gameName = games.getName();                    String gamePublisher = games.getPublisher();                    String gamePlatform = games.getPlatform();                    String gameDate = games.getReleaseDate();                    String gameDesc = games.getDescription();                    String gameUrl = games.getUrl();                    String gameId = games.getId();                    detailsDate.setText(gameDate);                    detailsPublisher.setText(gamePublisher);                    detailsPlatform.setText(gamePlatform);                    detailsDesc.setText(gameDesc);                    detailsName.setText(gameName);                intentReview.putExtra("game",detailsName.getText().toString());                intentReview.putExtra("gameID",gameId);                retrieveDataRecycler();                Glide.with(getApplicationContext()).load(gameUrl).into(imageView);            }            @Override            public void onCancelled(DatabaseError databaseError) {                // Getting Post failed, log a message                Log.w(TAG, "loadPost:onCancelled", databaseError.toException());            }        };        dbRef.addValueEventListener(postListener);    }}